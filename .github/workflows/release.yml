name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: make test-quick

      - name: Get version info
        id: version
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build cross-platform binaries
        env:
          CGO_ENABLED: 0
          VERSION: ${{ steps.version.outputs.VERSION }}
          BUILD_TIME: ${{ steps.version.outputs.BUILD_TIME }}
          GIT_COMMIT: ${{ steps.version.outputs.GIT_COMMIT }}
        run: |
          # Build flags
          LDFLAGS="-X github.com/shiquda/lai/internal/version.Version=${VERSION} -X github.com/shiquda/lai/internal/version.BuildTime=${BUILD_TIME} -X github.com/shiquda/lai/internal/version.GitCommit=${GIT_COMMIT}"
          
          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o lai-${VERSION}-linux-amd64
          
          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o lai-${VERSION}-windows-amd64.exe
          
          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o lai-${VERSION}-darwin-amd64
          
          # macOS ARM64
          GOOS=darwin GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o lai-${VERSION}-darwin-arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries
          path: |
            lai-*-linux-amd64
            lai-*-windows-amd64.exe
            lai-*-darwin-amd64
            lai-*-darwin-arm64

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-binaries
          path: artifacts

      - name: Get version info
        id: version
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT


      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/lai-*-linux-amd64
            artifacts/lai-*-windows-amd64.exe
            artifacts/lai-*-darwin-amd64
            artifacts/lai-*-darwin-arm64
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}